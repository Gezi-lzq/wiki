created: 20220512184736422
creator: lzq
modified: 20220512191925362
modifier: lzq
tags: gRPG
title: 1.gRPC试图解决的问题是什么？
type: text/vnd.tiddlywiki

答案是''通信''

!!!使用gRPC的动机：不同语言之间通信

大多数的应用程序往往都是由不同的编程语言编写的。例如，后端可以用Go编写，安卓可能由Java所编写，IOS可能由Swift所编写。


同时，在当今微服务架构的趋势下，后端，微服务会受业务需求和技术约束的影响而选择不同的编程语言进行实现，因此我们需要想办法通过服务与服务之间，通过遵守一致的约定来进行通信。如：

* 通信通道：REST，SOAP，消息队列

* 身份验证机制：Basic，OAuth，JWT

* 负载类型：JSON，XML，binary

* 数据模型

* 错误处理

为了彼此通信，他们必须都遵守一组API约定。例如：通信通道，身份验证机制，有效载荷格式，数据模型以及如何处理错误。在这种情况下，对于开发者需要考虑的事情太多了，构建适合的API的难度也变得十分高。


!!!使用gRPC的动机：简单而高效的通信


我们需要一种高效，快速且轻巧的通信，以足够快速的通信来满足微服务之间巨大的交换消息数量。

另外，在某些环境（例如移动应用）中，网络速度和带宽受到限制，拥有轻量级的通信协议与服务器进行交互也非常重要。

最后一点是，对于开发者来说，''通信''需要变得简单些。假设我们正在构建一个包含数百个甚至数千个微服务的系统。我们绝对不希望将大部分时间花在编写代码上只是为了让他们彼此通信。

于是，我们想要的是某种框架，允许开发人员专注于实现其服务的核心逻辑。并将其他所有内容留给框架处理。

''该框架就是gRPC''

[img[image.png]]

> 这篇第一次写的时候，软件卡崩了，导致没存上，很是无奈。虽然是看课边看边记，但是感觉第一次写的遣词造句比第二次的好多了，毕竟第二次写已经丧失了耐心了，发个牢骚....