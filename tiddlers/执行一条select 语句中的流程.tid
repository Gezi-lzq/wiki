created: 20230318164811138
creator: Gezi
modified: 20230318172113659
modifier: Gezi
tags: Mysql相关知识大纲 mysql
title: 执行一条select 语句中的流程
type: text/vnd.tiddlywiki

! 第一步：连接器

与Mysql数据库建立连接。连接的过程需要先经过 TCP 三次握手，因为 MySQL 是基于 TCP 协议进行传输的。

* MySQL 定义了空闲连接的最大空闲时长，由 wait_timeout 参数控制的，默认值是 8 小时（28880秒）
* MySQL 服务支持的最大连接数由 max_connections 参数控制，默认是 151 个。

! 第二步：查询缓存

> 这里说的缓存是 server 层的，在MYSQL 8.0版本后则移除了

对于查询语句，首先会到查询缓存（ Query Cache ）里查找缓存数据，看看之前有没有执行过这一条命令，这个查询缓存是以 key-value 形式保存在内存中的，key 为 SQL 查询语句，value 为 SQL 语句查询的结果。

由于查询缓存对于更新比较频繁的表，命中率较低，所以相对鸡肋。

! 第三步：解析 SQL

!! 解析器

1. ''词法分析''。MySQL 会根据你输入的字符串识别出关键字出来，构建出 SQL 语法树，这样方便后面模块获取 SQL 类型、表名、字段名、 where 条件等等。

2. ''语法分析''。根据词法分析的结果，语法解析器会根据语法规则，判断你输入的这个 SQL 语句是否满足 MySQL 语法。

解析器只负责构建语法树和检查语法，但是不会去查表或者字段存不存在。

! 第四步：执行 SQL

每条SELECT 查询语句流程主要可以分为下面这三个阶段

* prepare 阶段，也就是预处理阶段；
* optimize 阶段，也就是优化阶段；
* execute 阶段，也就是执行阶段；

!! 预处理器

* 检查 SQL 查询语句中的表或者字段是否存在；
* 将 select * 中的 * 符号，扩展为表上的所有列；

!! 优化器

<mark class="mark-blue">优化器主要负责将 SQL 查询语句的执行方案确定下来</mark>，比如在表里面有多个索引的时候，优化器会基于查询成本的考虑，来决定选择使用哪个索引。

!! 执行器

经历完优化器后，就确定了执行方案，接下来 MySQL 就真正开始执行语句了，这个工作是由「执行器」完成的。

在执行的过程中，执行器就会和存储引擎交互了，交互是以记录为单位的。


---
! 总结

* 连接器：建立连接，管理连接、校验用户身份；

* 查询缓存：查询语句如果命中查询缓存则直接返回，否则继续往下执行。MySQL 8.0 已删除该模块；

* 解析 SQL，通过解析器对 SQL 查询语句进行词法分析、语法分析，然后构建语法树，方便后续模块读取表名、字段、语句类型；

* 执行 SQL：执行 SQL 共有三个阶段：

* 预处理阶段：检查表或字段是否存在；将 select * 中的 * 符号扩展为表上的所有列。

* 优化阶段：基于查询成本的考虑， 选择查询成本最小的执行计划；

* 执行阶段：根据执行计划执行 SQL 查询语句，从存储引擎读取记录，返回给客户端；