created: 20230318074600829
creator: Gezi
modified: 20230318083653838
modifier: Gezi
tags: 消息“可靠性”和“一致性”问题
title: 向量时钟算法
type: text/vnd.tiddlywiki

!! 向量时钟算法

假设有N个消息会话方，系统的向量时钟由N维时钟组成，向量时钟在各方发送的消息体中传递，并按照向量时钟排序。每个节点维护一个向量（数组），每个元素代表一个节点，每个节点维护一个计数器。

具体实现思路如下：

1. 系统向量时钟设为(0,0...,N);

2. 节点发送消息，更新系统向量时钟，该节点时钟加一，其他节点不变。

3. 节点接收消息，更新系统向量时钟，该节点时钟加一;其他节点对比每个节点本地保留的向量时钟的值和消息中向量时钟的值，取最大值。

4. 依据消息体内系统向量时钟的偏序关系决定消息顺序。

(4.1) 如果可以确定偏序关系，则根据偏序关系由小到大显示

(4.2) 如果多条消息不能确定偏序关系，则按照自然顺序(接受到的顺序)显示。

<<<
向量时钟在理论上可以解决大部分消息一致性的问题，但在实现中还需要考虑实际使用时的体验。

这其中最需要关注的问题是：是否要强制排序，或者说，如果实际显示顺序和向量时钟之间的偏序关系不一致，是否要移动消息之间的顺序。

举个例子：在一个有多人的会话中，如果有一方网速特别慢，收不到消息，也发不出消息。在他看到的最后的消息之后，其他人已经开始新的话题，这时他关于上一个话题的消息终于发送成功，并被其他人收到。

此时就存在这样一个问题：这条关于上一个话题的消息是显示在最后，还是移到较早时间？

1）如果显示在最后，但消息内容和目前的话题不相关，其他人可能会感到莫名其妙；
2）如果把消息移到较早时间，那么这条消息可能不会被其他人看到，或者看到前面多了一条消息，会有种突兀的感觉。

IM 的场景很多，也很复杂，更多的时候需要从产品角度考虑问题。

对于消息是否需要排序的问题，这里只提出一个比较通用的方案：建议会话中不强制排序，会话历史记录中按照向量时钟的偏序关系进行排序。
<<<