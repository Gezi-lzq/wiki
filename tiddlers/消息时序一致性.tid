created: 20230315150638602
creator: Gezi
modified: 20230315154232336
modifier: Gezi
tags: IM系统-plato
title: 消息时序一致性
type: text/vnd.tiddlywiki

所谓的一致性，在IM中通常指的是消息时序的一致性，那就是：

1）聊天消息的上下文连续性；
2）聊天消息的绝对时间序。

实际上，在IM这种高性能场景下，服务端为了追求高吞吐、高并发，用到了多线程、异步IO等等技术。

在这种情况下，“高并发”与“顺序”对于IM服务端来说，本来就是矛盾的

!! 技术难点

* ''没有全局时钟'' : 在''分布式环境''下，客户端+服务端后台的各种后台服务，都各自''分布在不同的机器上''，机器之间都是使用的本地时钟，没有一个所谓的“全局时钟”（也没办法做到真正的全局时钟），那么所谓的消息时序''也就没有真正意义上的时序基准点''。所以消息时序问题显然不是“本地时间”可以完全决定的。

* ''多发送方问题'' : 绝对时序上，APP1先发出msg1，APP2后发出msg2，都发往服务器web1，''网络传输是不能保证msg1一定先于msg2到达的''，所以即使以一台服务器web1的时间为准，也不能精准描述msg1与msg2的绝对时序。

* ''多接收方问题'' : 绝对时序上，web1先发出msg1，后发出msg2，由于网络传输及多接收方的存在，''无法保证msg1先被接收到先被处理''，故也无法保证msg1与msg2的处理时序。

* ''网络传输与多线程问题''

!! 实用的优化思路

!!! 一对一单聊的消息一致性保证思路

常见优化方案，在A往B发出的消息中，加上发送方A本地的一个绝对时序（比如本机时间戳），来表示接收方B的展现时序。

那么当接收方B收到消息后，即使极端情况下消息可能存在乱序到达，但因为这个乱序的时间差对于普通用户来说体感是很短的，在UI展现层按照消息中自带的绝对时序排个序后再显示，用户其实是没有太多感知的。

!!! 多对多群聊的消息一致性保证思路

利用服务器的单点做序列化,保证所有群员收到消息的显示时序一致性

[img[多对多群聊消息一致性保证思路1.png]]

1）优点是：能实现所有群友的消息展示时序相同；
2）缺点是：这个生成全局递增序列号的服务很容易成为系统瓶颈。

''再次优化，只用保证一个群内的消息有序即可''，因此service层不再需要去一个统一的后端拿全局seq（序列号），只需要保证一个群的消息落在同一个service上即可。

[img[多对多群聊消息一致性保证思路2.png]]