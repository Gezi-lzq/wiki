created: 20230321152407878
creator: Gezi
modified: 20230321153636730
modifier: Gezi
tags: 网络演变
title: 阻塞IO(BIO)
type: text/vnd.tiddlywiki

[img[阻塞IO(用户态与内核态调用过程).png]]

1. 用户程序调用系统调用，例如读取数据的read()函数。

2. 将数据请求发送到内核，当前进程进入''阻塞状态，等待内核返回数据''。

3. 内核将数据从网络中读取到内核空间。(数据未就绪，线程一直等待)

4. 将数据复制到用户空间，内核通知调用进程数据已经准备好。

5. 用户进程从阻塞状态转换为就绪状态，可以开始处理数据。

> ''由于处理客户端的读写是阻塞式的，当数据未就绪时，线程只能一直处在阻塞状态，为了避免该阻塞影响后续接受新的client连接，所以一般情况下，一个client线程分配一个线程。''

!! 优点

1. 可以实现client和server段通信

2. 实现简单，通常一个client连接分配一个线程进行处理

!! 缺点

<mark class="mark-red">能支持的并发client连接数较少</mark>

1. 在于一台server能分配的线程是有限的

2. 大量线程会造成上下文切换过多而影响性能

!! 核心矛盾

处理客户端的读写是阻塞式的，在未接受到数据时，线程只能阻塞着。

<<<
打一个比方，在餐厅里，如果一桌客人还没有决定好点哪个菜，服务员只能一直在旁边等着。
所以我们希望有一种新的方式，如果客人还没决定好，可以告知服务员，服务员可以去做其他工作。
<<<