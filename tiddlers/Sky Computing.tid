created: 20230715051901335
modified: 20230715052616091
tags: 
title: Sky Computing
type: text/vnd.tiddlywiki

Stoica 认为互联网解决的这三个设计问题正是从当前的云计算中创建 Sky Computing 所需的思想。Sky Computing 需要一个兼容层来掩盖低级技术差异，一个云间层将作业路由到正确的云，以及一个对等层，允许云之间就如何交换服务达成协议。

Sky Computing 架构与互联网之间的类比性：路由器可类比于服务器，AS 类比于可用区，而 ISP 类比于云供应商。 就像在互联网中，IP 不关心在同一 ISP 或跨 ISP 的路由器之间的路由数据包，构建在云间层上的应用程序不需要在意它所运行的云平台。


实现 Sky Computing 愿景的第一步是提供一个云兼容层，通过抽象出云计算服务，使在该层之上开发的应用程序无需更改即可在不同的云上运行。简而言之，兼容层是一组可以构建应用程序的接口或 API，然后可以通过云平台的一组接口将该兼容性层移植到每个云。

该层可以类比于互联网中的 IP 层，然而与 IP 层不同的是，云兼容层明显更广泛且定义不明确，因为云平台向应用程序提供了丰富的一组服务，包括计算、存储、数据传输等。 因此，云兼容层更像一个操作系统（例如 Linux），可以管理计算机资源并向应用程序提供 API。

兼容层只是实现 Sky Computing 愿景的第一步。即使兼容层允许用户在不同的云上运行应用程序，用户仍然需要决定在哪个云上运行应用程序，需要在不同云之间进行性能/成本权衡。这类似于要求互联网用户为其域间流量明确选择 AS 路径，为了解决这个问题，Internet 使用 BGP 来做出 AS 级别的路由决策。同样，Sky Computing 应该实现一个云间层，从用户中抽象出云供应商；也就是说，用户不需要知道应用程序在哪个云上运行。 云间层是在兼容层之上实现的

https://zhuanlan.zhihu.com/p/403550435
