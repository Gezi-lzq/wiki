created: 20230227123822834
creator: Gezi
modified: 20230227125234271
modifier: Gezi
title: 乐观锁
type: text/vnd.tiddlywiki

乐观锁（Optimistic Concurrency Control，缩写“OCC”）是一种并发控制的方法。它''假设多用户并发的事务在处理时不会彼此互相影响，各事务能够在不产生锁的情况下处理各自影响的那部分数据''。在提交数据更新之前，每个事务会先检查在该事务读取数据后，有没有其他事务又修改了该数据。如果其他事务有更新的话，正在提交的事务会进行回滚。

乐观并发控制多数用于''数据竞争(data race)不大、冲突较少的环境中''。这种环境中，偶尔回滚事务的成本会低于读取数据时锁定数据的成本，因此可以获得比其他并发控制方法更高的吞吐量。

乐观并发控制''相信事务之间的数据竞争(data race)概率比较小''，因此尽可能直接做下去，直到提交时才去锁定，所以不会产生任何锁和死锁。但如果直接简单这么做还是有可能遇到不可预期结果例如//两个事务都读取了数据库某一行经过修改以后写回数据库就遇到了问题//.

乐观锁的实现思路是记录''数据版本（version）''或者是''时间戳''来实现。

使用版本记录是最常用的。在更新前检查在读取至更新这段时间别人有没有修改过这个数据。如果修改过，则重新读取，再次尝试更新，循环上述步骤直到更新成功（当然也允许更新失败的线程放弃操作）。