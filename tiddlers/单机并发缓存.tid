created: 20220930070322580
creator: lzq
modified: 20221002092108723
modifier: lzq
tags: 分布式缓存
title: 单机并发缓存
type: text/vnd.tiddlywiki

* sync.Mutex 互斥锁的使用，并实现 LRU 缓存的并发控制
* 实现GeeCache核心数据结构Group，缓存不存在时，调用回调函数获取源数据

Group 是 GeeCache 最核心的数据结构，负责与用户的交互，并且控制缓存值存储和获取的流程。

```
                            是
接收 key --> 检查是否被缓存 -----> 返回缓存值 ⑴
                |  否                         是
                |-----> 是否应当从远程节点获取 -----> 与远程节点交互 --> 返回缓存值 ⑵
                            |  否
                            |-----> 调用`回调函数`，获取值并添加到缓存 --> 返回缓存值 ⑶
```

代码结构

```
geecache/
    |--lru/
        |--lru.go  // lru 缓存淘汰策略
    |--byteview.go // 缓存值的抽象与封装
    |--cache.go    // 并发控制
    |--geecache.go // 负责与外部交互，控制缓存存储和获取的主流程
```
